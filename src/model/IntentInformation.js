/**
 * Rasa X HTTP API
 * This is the Rasa X HTTP API 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IntentInformation model module.
 * @module model/IntentInformation
 * @version 1.0.0
 */
class IntentInformation {
    /**
     * Constructs a new <code>IntentInformation</code>.
     * @alias module:model/IntentInformation
     * @param intent {String} Name of the intent
     */
    constructor(intent) { 
        
        IntentInformation.initialize(this, intent);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, intent) { 
        obj['intent'] = intent;
    }

    /**
     * Constructs a <code>IntentInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntentInformation} obj Optional instance to populate.
     * @return {module:model/IntentInformation} The populated <code>IntentInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntentInformation();

            if (data.hasOwnProperty('intent')) {
                obj['intent'] = ApiClient.convertToType(data['intent'], 'String');
            }
            if (data.hasOwnProperty('example_hashes')) {
                obj['example_hashes'] = ApiClient.convertToType(data['example_hashes'], ['String']);
            }
            if (data.hasOwnProperty('suggestions')) {
                obj['suggestions'] = ApiClient.convertToType(data['suggestions'], ['String']);
            }
            if (data.hasOwnProperty('is_temporaray')) {
                obj['is_temporaray'] = ApiClient.convertToType(data['is_temporaray'], 'Boolean');
            }
            if (data.hasOwnProperty('mapped_to')) {
                obj['mapped_to'] = ApiClient.convertToType(data['mapped_to'], 'String');
            }
            if (data.hasOwnProperty('user_goal')) {
                obj['user_goal'] = ApiClient.convertToType(data['user_goal'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name of the intent
 * @member {String} intent
 */
IntentInformation.prototype['intent'] = undefined;

/**
 * @member {Array.<String>} example_hashes
 */
IntentInformation.prototype['example_hashes'] = undefined;

/**
 * @member {Array.<String>} suggestions
 */
IntentInformation.prototype['suggestions'] = undefined;

/**
 * If `True` the intent is a temporary intent
 * @member {Boolean} is_temporaray
 */
IntentInformation.prototype['is_temporaray'] = undefined;

/**
 * In case this is a temporary intent it describes whether this intent is currently mapped to another one in the training data
 * @member {String} mapped_to
 */
IntentInformation.prototype['mapped_to'] = undefined;

/**
 * User goal the intent is mapped to
 * @member {String} user_goal
 */
IntentInformation.prototype['user_goal'] = undefined;






export default IntentInformation;

