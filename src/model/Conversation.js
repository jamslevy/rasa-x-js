/**
 * Rasa X HTTP API
 * This is the Rasa X HTTP API 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Event from './Event';

/**
 * The Conversation model module.
 * @module model/Conversation
 * @version 1.0.0
 */
class Conversation {
    /**
     * Constructs a new <code>Conversation</code>.
     * @alias module:model/Conversation
     */
    constructor() { 
        
        Conversation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Conversation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Conversation} obj Optional instance to populate.
     * @return {module:model/Conversation} The populated <code>Conversation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Conversation();

            if (data.hasOwnProperty('conversation_id')) {
                obj['conversation_id'] = ApiClient.convertToType(data['conversation_id'], 'String');
            }
            if (data.hasOwnProperty('latest_event_time')) {
                obj['latest_event_time'] = ApiClient.convertToType(data['latest_event_time'], 'Number');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [Event]);
            }
            if (data.hasOwnProperty('latest_message')) {
                obj['latest_message'] = ApiClient.convertToType(data['latest_message'], 'String');
            }
            if (data.hasOwnProperty('paused')) {
                obj['paused'] = ApiClient.convertToType(data['paused'], 'Boolean');
            }
            if (data.hasOwnProperty('followup_action')) {
                obj['followup_action'] = ApiClient.convertToType(data['followup_action'], 'String');
            }
            if (data.hasOwnProperty('slots')) {
                obj['slots'] = ApiClient.convertToType(data['slots'], [Object]);
            }
            if (data.hasOwnProperty('latest_input_channel')) {
                obj['latest_input_channel'] = ApiClient.convertToType(data['latest_input_channel'], 'String');
            }
            if (data.hasOwnProperty('latest_action_name')) {
                obj['latest_action_name'] = ApiClient.convertToType(data['latest_action_name'], 'String');
            }
            if (data.hasOwnProperty('active_form')) {
                obj['active_form'] = ApiClient.convertToType(data['active_form'], 'String');
            }
            if (data.hasOwnProperty('flagged_messages')) {
                obj['flagged_messages'] = ApiClient.convertToType(data['flagged_messages'], [Object]);
            }
        }
        return obj;
    }


}

/**
 * Id of conversation
 * @member {String} conversation_id
 */
Conversation.prototype['conversation_id'] = undefined;

/**
 * Timestamp of most recent event (in seconds)
 * @member {Number} latest_event_time
 */
Conversation.prototype['latest_event_time'] = undefined;

/**
 * @member {Array.<module:model/Event>} events
 */
Conversation.prototype['events'] = undefined;

/**
 * Latest user message
 * @member {String} latest_message
 */
Conversation.prototype['latest_message'] = undefined;

/**
 * Conversation paused
 * @member {Boolean} paused
 */
Conversation.prototype['paused'] = undefined;

/**
 * Name of the followup action
 * @member {String} followup_action
 */
Conversation.prototype['followup_action'] = undefined;

/**
 * Filled slots
 * @member {Array.<Object>} slots
 */
Conversation.prototype['slots'] = undefined;

/**
 * Name of the input channel last used
 * @member {String} latest_input_channel
 */
Conversation.prototype['latest_input_channel'] = undefined;

/**
 * Name of last bot action
 * @member {String} latest_action_name
 */
Conversation.prototype['latest_action_name'] = undefined;

/**
 * Name of the active form
 * @member {String} active_form
 */
Conversation.prototype['active_form'] = undefined;

/**
 * List of flagged messages
 * @member {Array.<Object>} flagged_messages
 */
Conversation.prototype['flagged_messages'] = undefined;






export default Conversation;

